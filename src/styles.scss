@import 'colors.scss';

:root {
  --primary-color: var(--mat-blue-500);
  --accent-color: var(--mat-amber-500);
  --warn-color: var(--mat-red-500);

  --text-color: var(--mat-grey-900);
  --disabled-color: var(--mat-grey-500);
  --background-color: var(--mat-grey-100);

  // NOTE: these set in params.ts
  --map-cxNominal: 0;
  --map-cyNominal: 0;
  --map-cxTile: 0;
  --map-cyTile: 0;
  --map-numXTiles: 0;
  --map-numYTiles: 0;
  --map-scale: 1;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

:focus {
  outline: 0;
}

body {
  background-color: var(--background-color);
  color: var(--text-color);
  font-family: 'Roboto', sans-serif;
  font-size: 1rem;
  font-weight: 400;
  height: 100%;
  line-height: 150%;
  overflow: auto;
  user-select: none;
  width: 100%;
}

html {
  border: 0;
  font-size: 14px;
  height: 100%;
  width: 100%;
}

map-root {
  main {
    background-color: var(--mat-light-green-200);
    height: calc(var(--map-cyNominal) * var(--map-scale));
    position: relative;
    width: calc(var(--map-cxNominal) * var(--map-scale));

    map-boundary,
    map-contours,
    map-forest,
    map-street,
    map-topo,
    map-track {
      height: 100%;
      position: absolute;
      width: 100%;
    }

    map-boundary,
    map-track {
      svg {
        height: 100%;
        width: 100%;

        & > g {
          transform: scale(var(--map-scale), var(--map-scale));
        }
      }
    }

    map-boundary {
      svg {
        g polygon {
          fill: transparent;
          stroke: var(--mat-blue-grey-500);
          stroke-dasharray: 4;
          stroke-width: calc(3 / var(--map-scale));
        }
      }
    }

    map-contours {
      svg {
        & > g {
          transform: scale(1, 1);
        }

        g {
          font-size: calc(8.5 / var(--map-scale));
        }

        g path {
          stroke-width: calc(1 / var(--map-scale));
        }

        g#Labels path {
          fill-opacity: 0;
          stroke-opacity: 0;
        }

        g#Labels text {
          transform: scale(calc(0.8 / var(--map-scale)));
        }

        g rect {
          fill-opacity: 0;
        }
      }
    }

    map-tile {
      display: inline-block;
      height: calc(var(--map-cyTile) * var(--map-scale));
      position: relative;
      vertical-align: top;
      width: calc(var(--map-cxTile) * var(--map-scale));

      canvas {
        height: var(--map-cyTile);
        position: absolute;
        visibility: hidden;
        width: var(--map-cxTile);
      }

      img {
        height: 100%;
        position: absolute;
        width: 100%;
      }
    }

    map-track[key='water'] {
      svg {
        g[id='Pond'] path {
          fill: rgba(var(--rgb-blue-200), 0.5);
          stroke-width: 0;
        }

        g[id='Swamp'] path {
          fill: rgba(var(--rgb-blue-100), 0.25);
          stroke: var(--mat-blue-200);
          stroke-dasharray: 2;
          stroke-width: calc(1 / var(--map-scale));
        }

        g path {
          fill: transparent;
          stroke: var(--mat-blue-200);
          stroke-width: calc(2 / var(--map-scale));
        }
      }
    }
  }
}
